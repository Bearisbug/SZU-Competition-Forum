@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}

:root {
  /* 过渡与动画时间 */
  --tagcloud-transition-user-duration: 1250ms;
  --tagcloud-transition-user-ease: ease-in-out;
  --tagcloud-transition-duration: 250ms;
  --tagcloud-transition-ease: ease-out;

  /* 这里设置标签云背景色（白色） */
  --tagcloud-bg-color-rgb: 255, 255, 255;

  /* 球体旋转动画的时间和方向 */
  --tagcloud-animation-duration: 25s;
  --tagcloud-animation-direction: normal;
  --tagcloud-animation-play-state: running;

  /* 重点：让球体宽高基于视口最小边，占满屏幕 */
  --tagcloud-diameter: calc(min(100vw, 100vh));
  --tagcloud-controls-diameter: calc(min(100vw, 100vh));

  /* 初始的旋转角度（球体朝向） */
  --tagcloud-start-rotation: 54;

  /* 控制环按钮的颜色，可按需设置 */
  --tagcloud-control-bg-color: transparent;
  --tagcloud-control-bg-hover-color: rgba(0, 0, 0, 0.1);
  --tagcloud-control-bg-checked-color: rgba(0, 0, 0, 0.2);

  /* 单个标签大小 = 直径 / 10（可自己调大或调小） */
  --tag-diameter: calc(var(--tagcloud-diameter) / 10);

  /* 字体与颜色 */
  --tag-font-color-rgb: 0, 0, 0;
  --tag-font-family: 'Open Sans', sans-serif;
  /* 字体大小随标签大小走，这里是标签直径的 1/5 */
  --tag-font-size: calc(var(--tag-diameter) / 5);
}

/* 如果有全局复位，可以放到 global.css */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 
   让 .tagcloud-wrapper 占满屏幕 
   并设置背景
*/
.tagcloud-wrapper {
  /* 修正拼写：直径(diameter)而非 diamater */
  --_control-diameter: var(--tagcloud-controls-diameter);
  --_control-radius: calc(var(--_control-diameter) / 2);
  --_diameter: var(--tagcloud-diameter);
  /* 球体半径 - 标签半径（让标签刚好在球面上） */
  --_radius: calc( calc(var(--_diameter) / 2) - calc(var(--tag-diameter) / 2) );

  /* 占满可视区 */
  width: 100vw;
  height: 100vh;
  background-color: rgb(var(--tagcloud-bg-color-rgb));

  display: flex;
  align-items: center;
  justify-content: center;

  font-family: var(--tag-font-family);
  font-size: var(--tag-font-size);
}

/* 鼠标悬停时，暂停球体自转 */
.tagcloud-wrapper:hover {
  --tagcloud-animation-play-state: paused;
}

/* 
   ===========================
   控制环 (外围 20 个按钮)
   ===========================
*/
.tagcloud-controls {
  width: var(--_control-diameter);
  height: var(--_control-diameter);

  position: relative;
  --_current-rotation: var(--tagcloud-start-rotation);
  transform-style: inherit;
}

/* 这 20 个扇形按钮：分别控制不同的旋转 */
.tagcloud-control-button {
  /* 计算每个扇形按钮的宽高和位置 */
  --_width: var(--_control-radius);
  --_height: calc(
    var(--_control-diameter) * 3.141592653589793 / var(--num-elements) + 1px
  );
  --_theta-start: 0;
  --_theta-length: calc(2 * 3.141592653589793);
  --_segment: calc(
    var(--_theta-start) +
    var(--index) / var(--num-elements) * var(--_theta-length)
  );
  --_x: calc(var(--_control-radius) * cos(var(--_segment)));
  --_y: calc(
    var(--_control-radius) * sin(var(--_segment)) +
    var(--_control-radius) -
    var(--_height) / 2
  );
  --_rotation: calc(var(--index) / var(--num-elements) * 360deg);

  position: absolute;
  left: var(--_x);
  top: var(--_y);
  width: var(--_width);
  height: var(--_height);

  clip-path: polygon(0% 50%, 100% 0%, 100% 100%);
  transform-origin: right center;
  transform: rotate(var(--_rotation));
  transition: background-color var(--tagcloud-transition-duration)
              var(--tagcloud-transition-ease);
  background-color: var(--tagcloud-control-bg-color);
}

/* 隐藏默认的 radio 样式，让整个扇形可点击 */
.tagcloud-control-button input {
  -webkit-appearance: none;
  appearance: none;
  opacity: 0;
  width: 100%;
  height: 100%;
}

/* hover / checked 效果 */
.tagcloud-control-button:hover {
  background-color: var(--tagcloud-control-bg-hover-color);
}
.tagcloud-control-button:has(input:checked) {
  background-color: var(--tagcloud-control-bg-checked-color);
}

/* 
   下面这部分是 “点击旋转逻辑”： 
   不同按钮对应不同“_current-rotation”，
   用 nth-child(1)~(20) 匹配 20 个按钮
*/
.tagcloud-controls:has(.tagcloud-control-button:nth-child(1) input:checked) {
  --_current-rotation: 108;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(2) input:checked) {
  --_current-rotation: 126;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(3) input:checked) {
  --_current-rotation: 144;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(4) input:checked) {
  --_current-rotation: 162;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(5) input:checked) {
  --_current-rotation: 180;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(6) input:checked) {
  --_current-rotation: 198;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(7) input:checked) {
  --_current-rotation: 216;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(8) input:checked) {
  --_current-rotation: 234;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(9) input:checked) {
  --_current-rotation: 252;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(10) input:checked) {
  --_current-rotation: 270;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(11) input:checked) {
  --_current-rotation: 288;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(12) input:checked) {
  --_current-rotation: 306;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(13) input:checked) {
  --_current-rotation: 324;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(14) input:checked) {
  --_current-rotation: 342;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(15) input:checked) {
  --_current-rotation: 0;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(16) input:checked) {
  --_current-rotation: 18;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(17) input:checked) {
  --_current-rotation: 36;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(18) input:checked) {
  --_current-rotation: 54;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(19) input:checked) {
  --_current-rotation: 72;
}
.tagcloud-controls:has(.tagcloud-control-button:nth-child(20) input:checked) {
  --_current-rotation: 90;
}

/* 
   选中按钮后，旋转整个球 
   （.tagcloud-rotation 是包住 <ul> 的容器）
*/
.tagcloud-control-button:has(input:checked) ~ .tagcloud-rotation {
  transform: translate(-50%, -50%) rotate(calc(var(--_current-rotation) * 1deg));
}
.tagcloud-control-button:has(input:checked)
~ .tagcloud-rotation
.tagcloud-tags
.tagcloud-tag
div {
  transform: rotateZ(calc(var(--_current-rotation) * -1deg));
}

/*
   ===========================
   球体本身（圆形空间）
   ===========================
*/
.tagcloud-rotation {
  position: absolute;
  width: var(--_diameter);
  height: var(--_diameter);

  perspective: calc(var(--_diameter) * 2);
  transform-style: preserve-3d;

  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) rotate(calc(var(--_current-rotation) * 1deg));

  /* 
     球体本身的背景渐变 
     （可自由修改颜色和半径）
  */
  background: radial-gradient(
    rgba(var(--tagcloud-bg-color-rgb), 0.75) 15%,
    rgba(var(--tagcloud-bg-color-rgb), 0) calc(75% - var(--tag-diameter))
  );
  border-radius: 50%;
  transition: transform var(--tagcloud-transition-user-duration)
              var(--tagcloud-transition-user-ease);
}

/* 
   =============
   球上的标签列表
   =============
*/
.tagcloud-tags {
  position: absolute;
  width: 100%;
  height: 100%;

  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);

  list-style-type: none;
  transform-style: inherit;

  animation: tagcloud-rotation var(--tagcloud-animation-duration)
             var(--tagcloud-animation-direction) linear infinite
             var(--tagcloud-animation-play-state);
}

@keyframes tagcloud-rotation {
  from {
    transform: translate(-50%, -50%) rotateX(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotateX(360deg);
  }
}

/* 单个标签在球面上的定位与动画 */
.tagcloud-tag {
  --_phi: acos(calc(-1 + (2 * var(--index)) / var(--num-elements)));
  --_theta: calc(
    sqrt(calc(var(--num-elements) * 3.141592653589793)) * var(--_phi)
  );
  --_x: calc(cos(var(--_theta)) * sin(var(--_phi)));
  --_y: calc(sin(var(--_theta)) * sin(var(--_phi)));
  --_z: calc(cos(var(--_phi)));

  --_vector-length: sqrt(
    var(--_x) * var(--_x) +
    var(--_y) * var(--_y) +
    var(--_z) * var(--_z)
  );
  --_normalized-x: calc(var(--_x) / var(--_vector-length));
  --_normalized-y: calc(var(--_y) / var(--_vector-length));
  --_normalized-z: calc(var(--_z) / var(--_vector-length));

  --_scaled-x: calc(var(--_normalized-x) * var(--_radius));
  --_scaled-y: calc(var(--_normalized-y) * var(--_radius));
  --_scaled-z: calc(var(--_normalized-z) * var(--_radius));

  /* +var(--_radius) 让范围从 0 到 2r，而不是从 -r 到 r */
  --_final-x: calc(var(--_scaled-x) + var(--_radius));
  --_final-y: calc(var(--_scaled-y) + var(--_radius));
  --_final-z: var(--_scaled-z);

  pointer-events: none;
  width: var(--tag-diameter);
  height: var(--tag-diameter);

  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;

  transition: opacity var(--tagcloud-transition-duration)
              var(--tagcloud-transition-ease);

  transform: translate3d(var(--_final-x), var(--_final-y), var(--_final-z));

  /* 每个标签也绕 X 轴公转，模拟 3D 旋转 */
  animation: tagcloud-tag-rotation var(--tagcloud-animation-duration)
             var(--tagcloud-animation-direction) linear infinite
             var(--tagcloud-animation-play-state);
}

@keyframes tagcloud-tag-rotation {
  from {
    transform: translate3d(var(--_final-x), var(--_final-y), var(--_final-z))
               rotateX(360deg);
  }
  to {
    transform: translate3d(var(--_final-x), var(--_final-y), var(--_final-z))
               rotateX(0deg);
  }
}

/* 让标签“面向前方”时，抵消 Z 轴旋转 */
.tagcloud-tag div {
  transform: rotateZ(calc(var(--_current-rotation) * -1deg));
  transition: transform var(--tagcloud-transition-user-duration)
              var(--tagcloud-transition-user-ease);
}

/* 标签文字样式 */
.tagcloud-tag div a {
  pointer-events: initial;
  color: rgb(var(--tag-font-color-rgb));
  text-decoration: none;
  text-shadow: 1px 1px 1px rgb(var(--tagcloud-bg-color-rgb)),
               1px -1px 1px rgb(var(--tagcloud-bg-color-rgb)),
               -1px 1px 1px rgb(var(--tagcloud-bg-color-rgb)),
               -1px -1px 1px rgb(var(--tagcloud-bg-color-rgb)),
               0 0 1rem rgb(var(--tagcloud-bg-color-rgb));
}

/* 当鼠标悬停在某个标签时，其他标签变暗 */
.tagcloud-tags:hover .tagcloud-tag:not(:hover) {
  opacity: 0.25;
}